// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: embedding.proto

package ai_bots

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetContentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainId  int64  `protobuf:"varint,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	ProfileId int64  `protobuf:"varint,2,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	Query     string `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	// threshold немає універсального "правильного" значення.
	// Його потрібно підбирати експериментально для ваших даних.
	// 1.Почніть з припущення:•Для Cosine Distance (<=>) хороша відправна точка — 0.2 або 0.3.•Для L2 Distance (<->) можна почати з 0.5 або 0.6.
	// 2.Проведіть експерименти:•Зробіть запит з текстом, який точно є у вашій базі (наприклад, "які у вас тарифи?").
	// Подивіться на відстань, яку він повертає (наприклад, 0.08).
	// •Зробіть запит з текстом, який точно не має відношення до ваших даних (наприклад, "рецепт борщу").
	// Подивіться на відстань (наприклад, 0.75).•Ваш поріг має бути десь посередині — достатньо великим,
	// щоб пропускати релевантні результати, і достатньо малим, щоб відсікати нерелевантні.
	Threshold float32 `protobuf:"fixed32,5,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Limit     int32   `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Split     bool    `protobuf:"varint,7,opt,name=split,proto3" json:"split,omitempty"`
}

func (x *GetContentRequest) Reset() {
	*x = GetContentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_embedding_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentRequest) ProtoMessage() {}

func (x *GetContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_embedding_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentRequest.ProtoReflect.Descriptor instead.
func (*GetContentRequest) Descriptor() ([]byte, []int) {
	return file_embedding_proto_rawDescGZIP(), []int{0}
}

func (x *GetContentRequest) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

func (x *GetContentRequest) GetProfileId() int64 {
	if x != nil {
		return x.ProfileId
	}
	return 0
}

func (x *GetContentRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetContentRequest) GetThreshold() float32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *GetContentRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetContentRequest) GetSplit() bool {
	if x != nil {
		return x.Split
	}
	return false
}

type GetContentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content  string            `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Distance float32           `protobuf:"fixed32,2,opt,name=distance,proto3" json:"distance,omitempty"`
	Ids      []int64           `protobuf:"varint,3,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Metadata map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetContentResponse) Reset() {
	*x = GetContentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_embedding_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContentResponse) ProtoMessage() {}

func (x *GetContentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_embedding_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContentResponse.ProtoReflect.Descriptor instead.
func (*GetContentResponse) Descriptor() ([]byte, []int) {
	return file_embedding_proto_rawDescGZIP(), []int{1}
}

func (x *GetContentResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetContentResponse) GetDistance() float32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *GetContentResponse) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *GetContentResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Embed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ProfileId int32     `protobuf:"varint,2,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	Content   string    `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Embedding []float32 `protobuf:"fixed32,4,rep,packed,name=embedding,proto3" json:"embedding,omitempty"`
	Metadata  []byte    `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *Embed) Reset() {
	*x = Embed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_embedding_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Embed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Embed) ProtoMessage() {}

func (x *Embed) ProtoReflect() protoreflect.Message {
	mi := &file_embedding_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Embed.ProtoReflect.Descriptor instead.
func (*Embed) Descriptor() ([]byte, []int) {
	return file_embedding_proto_rawDescGZIP(), []int{2}
}

func (x *Embed) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Embed) GetProfileId() int32 {
	if x != nil {
		return x.ProfileId
	}
	return 0
}

func (x *Embed) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Embed) GetEmbedding() []float32 {
	if x != nil {
		return x.Embedding
	}
	return nil
}

func (x *Embed) GetMetadata() []byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type CreateEmbeddingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainId  int64    `protobuf:"varint,1,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	ProfileId int64    `protobuf:"varint,2,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	Embed     []*Embed `protobuf:"bytes,3,rep,name=embed,proto3" json:"embed,omitempty"`
	Type      string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *CreateEmbeddingRequest) Reset() {
	*x = CreateEmbeddingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_embedding_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEmbeddingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmbeddingRequest) ProtoMessage() {}

func (x *CreateEmbeddingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_embedding_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmbeddingRequest.ProtoReflect.Descriptor instead.
func (*CreateEmbeddingRequest) Descriptor() ([]byte, []int) {
	return file_embedding_proto_rawDescGZIP(), []int{3}
}

func (x *CreateEmbeddingRequest) GetDomainId() int64 {
	if x != nil {
		return x.DomainId
	}
	return 0
}

func (x *CreateEmbeddingRequest) GetProfileId() int64 {
	if x != nil {
		return x.ProfileId
	}
	return 0
}

func (x *CreateEmbeddingRequest) GetEmbed() []*Embed {
	if x != nil {
		return x.Embed
	}
	return nil
}

func (x *CreateEmbeddingRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type CreateEmbeddingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateEmbeddingResponse) Reset() {
	*x = CreateEmbeddingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_embedding_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEmbeddingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEmbeddingResponse) ProtoMessage() {}

func (x *CreateEmbeddingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_embedding_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEmbeddingResponse.ProtoReflect.Descriptor instead.
func (*CreateEmbeddingResponse) Descriptor() ([]byte, []int) {
	return file_embedding_proto_rawDescGZIP(), []int{4}
}

var File_embedding_proto protoreflect.FileDescriptor

var file_embedding_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x07, 0x61, 0x69, 0x5f, 0x62, 0x6f, 0x74, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x22, 0xe0, 0x01, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x45, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x61, 0x69, 0x5f, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x8a, 0x01, 0x0a, 0x05, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x02, 0x52, 0x09, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8e, 0x01, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x69, 0x5f, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x52, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x19, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb3, 0x01, 0x0a, 0x10, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x1f, 0x2e, 0x61, 0x69, 0x5f, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x61, 0x69, 0x5f, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x61, 0x69, 0x5f, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x61, 0x69, 0x5f, 0x62, 0x6f, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2b,
	0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x62,
	0x69, 0x74, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x61, 0x69, 0x5f, 0x62,
	0x6f, 0x74, 0x73, 0x3b, 0x61, 0x69, 0x5f, 0x62, 0x6f, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_embedding_proto_rawDescOnce sync.Once
	file_embedding_proto_rawDescData = file_embedding_proto_rawDesc
)

func file_embedding_proto_rawDescGZIP() []byte {
	file_embedding_proto_rawDescOnce.Do(func() {
		file_embedding_proto_rawDescData = protoimpl.X.CompressGZIP(file_embedding_proto_rawDescData)
	})
	return file_embedding_proto_rawDescData
}

var file_embedding_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_embedding_proto_goTypes = []interface{}{
	(*GetContentRequest)(nil),       // 0: ai_bots.GetContentRequest
	(*GetContentResponse)(nil),      // 1: ai_bots.GetContentResponse
	(*Embed)(nil),                   // 2: ai_bots.Embed
	(*CreateEmbeddingRequest)(nil),  // 3: ai_bots.CreateEmbeddingRequest
	(*CreateEmbeddingResponse)(nil), // 4: ai_bots.CreateEmbeddingResponse
	nil,                             // 5: ai_bots.GetContentResponse.MetadataEntry
}
var file_embedding_proto_depIdxs = []int32{
	5, // 0: ai_bots.GetContentResponse.metadata:type_name -> ai_bots.GetContentResponse.MetadataEntry
	2, // 1: ai_bots.CreateEmbeddingRequest.embed:type_name -> ai_bots.Embed
	3, // 2: ai_bots.EmbeddingService.CreateEmbedding:input_type -> ai_bots.CreateEmbeddingRequest
	0, // 3: ai_bots.EmbeddingService.GetContent:input_type -> ai_bots.GetContentRequest
	4, // 4: ai_bots.EmbeddingService.CreateEmbedding:output_type -> ai_bots.CreateEmbeddingResponse
	1, // 5: ai_bots.EmbeddingService.GetContent:output_type -> ai_bots.GetContentResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_embedding_proto_init() }
func file_embedding_proto_init() {
	if File_embedding_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_embedding_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_embedding_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetContentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_embedding_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Embed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_embedding_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEmbeddingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_embedding_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEmbeddingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_embedding_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_embedding_proto_goTypes,
		DependencyIndexes: file_embedding_proto_depIdxs,
		MessageInfos:      file_embedding_proto_msgTypes,
	}.Build()
	File_embedding_proto = out.File
	file_embedding_proto_rawDesc = nil
	file_embedding_proto_goTypes = nil
	file_embedding_proto_depIdxs = nil
}
