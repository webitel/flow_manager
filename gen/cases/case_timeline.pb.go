// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: case_timeline.proto

package cases

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	general "github.com/webitel/flow_manager/gen/general"
	_ "github.com/webitel/webitel-go-kit/cmd/protoc-gen-go-webitel/gen/go/proto/webitel"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CaseTimelineEventType int32

const (
	CaseTimelineEventType_chat  CaseTimelineEventType = 0
	CaseTimelineEventType_call  CaseTimelineEventType = 1
	CaseTimelineEventType_email CaseTimelineEventType = 2
)

// Enum value maps for CaseTimelineEventType.
var (
	CaseTimelineEventType_name = map[int32]string{
		0: "chat",
		1: "call",
		2: "email",
	}
	CaseTimelineEventType_value = map[string]int32{
		"chat":  0,
		"call":  1,
		"email": 2,
	}
)

func (x CaseTimelineEventType) Enum() *CaseTimelineEventType {
	p := new(CaseTimelineEventType)
	*p = x
	return p
}

func (x CaseTimelineEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CaseTimelineEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_case_timeline_proto_enumTypes[0].Descriptor()
}

func (CaseTimelineEventType) Type() protoreflect.EnumType {
	return &file_case_timeline_proto_enumTypes[0]
}

func (x CaseTimelineEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CaseTimelineEventType.Descriptor instead.
func (CaseTimelineEventType) EnumDescriptor() ([]byte, []int) {
	return file_case_timeline_proto_rawDescGZIP(), []int{0}
}

type GetTimelineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32                   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size     int32                   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Q        string                  `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	Sort     string                  `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Fields   []string                `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
	CaseId   string                  `protobuf:"bytes,6,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
	Ids      []string                `protobuf:"bytes,7,rep,name=ids,proto3" json:"ids,omitempty"`
	DateFrom int64                   `protobuf:"varint,8,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateTo   int64                   `protobuf:"varint,9,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	Type     []CaseTimelineEventType `protobuf:"varint,10,rep,packed,name=type,proto3,enum=webitel.cases.CaseTimelineEventType" json:"type,omitempty"`
}

func (x *GetTimelineRequest) Reset() {
	*x = GetTimelineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_timeline_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineRequest) ProtoMessage() {}

func (x *GetTimelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_case_timeline_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineRequest.ProtoReflect.Descriptor instead.
func (*GetTimelineRequest) Descriptor() ([]byte, []int) {
	return file_case_timeline_proto_rawDescGZIP(), []int{0}
}

func (x *GetTimelineRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTimelineRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetTimelineRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *GetTimelineRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *GetTimelineRequest) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *GetTimelineRequest) GetCaseId() string {
	if x != nil {
		return x.CaseId
	}
	return ""
}

func (x *GetTimelineRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *GetTimelineRequest) GetDateFrom() int64 {
	if x != nil {
		return x.DateFrom
	}
	return 0
}

func (x *GetTimelineRequest) GetDateTo() int64 {
	if x != nil {
		return x.DateTo
	}
	return 0
}

func (x *GetTimelineRequest) GetType() []CaseTimelineEventType {
	if x != nil {
		return x.Type
	}
	return nil
}

type GetTimelineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Days []*DayTimeline `protobuf:"bytes,2,rep,name=days,proto3" json:"days,omitempty"`
	Page int32          `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Next bool           `protobuf:"varint,4,opt,name=next,proto3" json:"next,omitempty"`
}

func (x *GetTimelineResponse) Reset() {
	*x = GetTimelineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_timeline_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineResponse) ProtoMessage() {}

func (x *GetTimelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_case_timeline_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineResponse.ProtoReflect.Descriptor instead.
func (*GetTimelineResponse) Descriptor() ([]byte, []int) {
	return file_case_timeline_proto_rawDescGZIP(), []int{1}
}

func (x *GetTimelineResponse) GetDays() []*DayTimeline {
	if x != nil {
		return x.Days
	}
	return nil
}

func (x *GetTimelineResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTimelineResponse) GetNext() bool {
	if x != nil {
		return x.Next
	}
	return false
}

type GetTimelineCounterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaseId string `protobuf:"bytes,1,opt,name=case_id,json=caseId,proto3" json:"case_id,omitempty"`
}

func (x *GetTimelineCounterRequest) Reset() {
	*x = GetTimelineCounterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_timeline_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimelineCounterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineCounterRequest) ProtoMessage() {}

func (x *GetTimelineCounterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_case_timeline_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineCounterRequest.ProtoReflect.Descriptor instead.
func (*GetTimelineCounterRequest) Descriptor() ([]byte, []int) {
	return file_case_timeline_proto_rawDescGZIP(), []int{2}
}

func (x *GetTimelineCounterRequest) GetCaseId() string {
	if x != nil {
		return x.CaseId
	}
	return ""
}

type GetTimelineCounterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// filter dates
	DateFrom int64 `protobuf:"varint,1,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateTo   int64 `protobuf:"varint,2,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	// defined event types
	ChatsCount  int64 `protobuf:"varint,3,opt,name=chats_count,json=chatsCount,proto3" json:"chats_count,omitempty"`
	CallsCount  int64 `protobuf:"varint,4,opt,name=calls_count,json=callsCount,proto3" json:"calls_count,omitempty"`
	EmailsCount int64 `protobuf:"varint,5,opt,name=emails_count,json=emailsCount,proto3" json:"emails_count,omitempty"`
}

func (x *GetTimelineCounterResponse) Reset() {
	*x = GetTimelineCounterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_timeline_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTimelineCounterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimelineCounterResponse) ProtoMessage() {}

func (x *GetTimelineCounterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_case_timeline_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimelineCounterResponse.ProtoReflect.Descriptor instead.
func (*GetTimelineCounterResponse) Descriptor() ([]byte, []int) {
	return file_case_timeline_proto_rawDescGZIP(), []int{3}
}

func (x *GetTimelineCounterResponse) GetDateFrom() int64 {
	if x != nil {
		return x.DateFrom
	}
	return 0
}

func (x *GetTimelineCounterResponse) GetDateTo() int64 {
	if x != nil {
		return x.DateTo
	}
	return 0
}

func (x *GetTimelineCounterResponse) GetChatsCount() int64 {
	if x != nil {
		return x.ChatsCount
	}
	return 0
}

func (x *GetTimelineCounterResponse) GetCallsCount() int64 {
	if x != nil {
		return x.CallsCount
	}
	return 0
}

func (x *GetTimelineCounterResponse) GetEmailsCount() int64 {
	if x != nil {
		return x.EmailsCount
	}
	return 0
}

type CallEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClosedAt      int64               `protobuf:"varint,3,opt,name=closed_at,json=closedAt,proto3" json:"closed_at,omitempty"`
	Duration      int64               `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	IsInbound     bool                `protobuf:"varint,6,opt,name=is_inbound,json=isInbound,proto3" json:"is_inbound,omitempty"`
	IsMissed      bool                `protobuf:"varint,7,opt,name=is_missed,json=isMissed,proto3" json:"is_missed,omitempty"`
	Participants  []*general.Lookup   `protobuf:"bytes,9,rep,name=participants,proto3" json:"participants,omitempty"`
	Gateway       *general.Lookup     `protobuf:"bytes,10,opt,name=gateway,proto3" json:"gateway,omitempty"`
	FlowScheme    *general.Lookup     `protobuf:"bytes,11,opt,name=flow_scheme,json=flowScheme,proto3" json:"flow_scheme,omitempty"`
	Queue         *general.Lookup     `protobuf:"bytes,12,opt,name=queue,proto3" json:"queue,omitempty"`
	IsDetailed    bool                `protobuf:"varint,13,opt,name=is_detailed,json=isDetailed,proto3" json:"is_detailed,omitempty"`
	Files         []*CallFile         `protobuf:"bytes,14,rep,name=files,proto3" json:"files,omitempty"`
	Transcripts   []*TranscriptLookup `protobuf:"bytes,15,rep,name=transcripts,proto3" json:"transcripts,omitempty"`
	TotalDuration int64               `protobuf:"varint,16,opt,name=total_duration,json=totalDuration,proto3" json:"total_duration,omitempty"`
}

func (x *CallEvent) Reset() {
	*x = CallEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_timeline_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallEvent) ProtoMessage() {}

func (x *CallEvent) ProtoReflect() protoreflect.Message {
	mi := &file_case_timeline_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallEvent.ProtoReflect.Descriptor instead.
func (*CallEvent) Descriptor() ([]byte, []int) {
	return file_case_timeline_proto_rawDescGZIP(), []int{4}
}

func (x *CallEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CallEvent) GetClosedAt() int64 {
	if x != nil {
		return x.ClosedAt
	}
	return 0
}

func (x *CallEvent) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *CallEvent) GetIsInbound() bool {
	if x != nil {
		return x.IsInbound
	}
	return false
}

func (x *CallEvent) GetIsMissed() bool {
	if x != nil {
		return x.IsMissed
	}
	return false
}

func (x *CallEvent) GetParticipants() []*general.Lookup {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *CallEvent) GetGateway() *general.Lookup {
	if x != nil {
		return x.Gateway
	}
	return nil
}

func (x *CallEvent) GetFlowScheme() *general.Lookup {
	if x != nil {
		return x.FlowScheme
	}
	return nil
}

func (x *CallEvent) GetQueue() *general.Lookup {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *CallEvent) GetIsDetailed() bool {
	if x != nil {
		return x.IsDetailed
	}
	return false
}

func (x *CallEvent) GetFiles() []*CallFile {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *CallEvent) GetTranscripts() []*TranscriptLookup {
	if x != nil {
		return x.Transcripts
	}
	return nil
}

func (x *CallEvent) GetTotalDuration() int64 {
	if x != nil {
		return x.TotalDuration
	}
	return 0
}

type ChatEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ClosedAt     int64                   `protobuf:"varint,3,opt,name=closed_at,json=closedAt,proto3" json:"closed_at,omitempty"`
	Duration     int64                   `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	IsInbound    bool                    `protobuf:"varint,6,opt,name=is_inbound,json=isInbound,proto3" json:"is_inbound,omitempty"`
	IsMissed     bool                    `protobuf:"varint,7,opt,name=is_missed,json=isMissed,proto3" json:"is_missed,omitempty"`
	Participants []*general.Lookup       `protobuf:"bytes,9,rep,name=participants,proto3" json:"participants,omitempty"`
	Gateway      *general.ExtendedLookup `protobuf:"bytes,10,opt,name=gateway,proto3" json:"gateway,omitempty"`
	FlowScheme   *general.Lookup         `protobuf:"bytes,11,opt,name=flow_scheme,json=flowScheme,proto3" json:"flow_scheme,omitempty"`
	Queue        *general.Lookup         `protobuf:"bytes,12,opt,name=queue,proto3" json:"queue,omitempty"`
	IsDetailed   bool                    `protobuf:"varint,13,opt,name=is_detailed,json=isDetailed,proto3" json:"is_detailed,omitempty"`
}

func (x *ChatEvent) Reset() {
	*x = ChatEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_timeline_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatEvent) ProtoMessage() {}

func (x *ChatEvent) ProtoReflect() protoreflect.Message {
	mi := &file_case_timeline_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatEvent.ProtoReflect.Descriptor instead.
func (*ChatEvent) Descriptor() ([]byte, []int) {
	return file_case_timeline_proto_rawDescGZIP(), []int{5}
}

func (x *ChatEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatEvent) GetClosedAt() int64 {
	if x != nil {
		return x.ClosedAt
	}
	return 0
}

func (x *ChatEvent) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ChatEvent) GetIsInbound() bool {
	if x != nil {
		return x.IsInbound
	}
	return false
}

func (x *ChatEvent) GetIsMissed() bool {
	if x != nil {
		return x.IsMissed
	}
	return false
}

func (x *ChatEvent) GetParticipants() []*general.Lookup {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *ChatEvent) GetGateway() *general.ExtendedLookup {
	if x != nil {
		return x.Gateway
	}
	return nil
}

func (x *ChatEvent) GetFlowScheme() *general.Lookup {
	if x != nil {
		return x.FlowScheme
	}
	return nil
}

func (x *ChatEvent) GetQueue() *general.Lookup {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *ChatEvent) GetIsDetailed() bool {
	if x != nil {
		return x.IsDetailed
	}
	return false
}

type EmailEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	From        []string        `protobuf:"bytes,3,rep,name=from,proto3" json:"from,omitempty"`                             // array of senders (email addresses)
	To          []string        `protobuf:"bytes,4,rep,name=to,proto3" json:"to,omitempty"`                                 // array of receivers (email addresses)
	Sender      []string        `protobuf:"bytes,5,rep,name=sender,proto3" json:"sender,omitempty"`                         // array of receivers (email addresses)
	Cc          []string        `protobuf:"bytes,6,rep,name=cc,proto3" json:"cc,omitempty"`                                 // array of ccs (email addresses)
	IsInbound   bool            `protobuf:"varint,7,opt,name=is_inbound,json=isInbound,proto3" json:"is_inbound,omitempty"` // inbound/outbound email
	Subject     string          `protobuf:"bytes,8,opt,name=subject,proto3" json:"subject,omitempty"`                       //
	Body        string          `protobuf:"bytes,9,opt,name=body,proto3" json:"body,omitempty"`                             // plain text of email
	Html        string          `protobuf:"bytes,10,opt,name=html,proto3" json:"html,omitempty"`                            // html body of email
	Owner       *general.Lookup `protobuf:"bytes,11,opt,name=owner,proto3" json:"owner,omitempty"`                          // Agent who sent/accepted
	Attachments []*Attachment   `protobuf:"bytes,12,rep,name=attachments,proto3" json:"attachments,omitempty"`
	Profile     *general.Lookup `protobuf:"bytes,13,opt,name=profile,proto3" json:"profile,omitempty"`                          // email profile
	IsDetailed  bool            `protobuf:"varint,14,opt,name=is_detailed,json=isDetailed,proto3" json:"is_detailed,omitempty"` // reserved for the open
}

func (x *EmailEvent) Reset() {
	*x = EmailEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_timeline_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailEvent) ProtoMessage() {}

func (x *EmailEvent) ProtoReflect() protoreflect.Message {
	mi := &file_case_timeline_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailEvent.ProtoReflect.Descriptor instead.
func (*EmailEvent) Descriptor() ([]byte, []int) {
	return file_case_timeline_proto_rawDescGZIP(), []int{6}
}

func (x *EmailEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EmailEvent) GetFrom() []string {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *EmailEvent) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *EmailEvent) GetSender() []string {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *EmailEvent) GetCc() []string {
	if x != nil {
		return x.Cc
	}
	return nil
}

func (x *EmailEvent) GetIsInbound() bool {
	if x != nil {
		return x.IsInbound
	}
	return false
}

func (x *EmailEvent) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *EmailEvent) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *EmailEvent) GetHtml() string {
	if x != nil {
		return x.Html
	}
	return ""
}

func (x *EmailEvent) GetOwner() *general.Lookup {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *EmailEvent) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *EmailEvent) GetProfile() *general.Lookup {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *EmailEvent) GetIsDetailed() bool {
	if x != nil {
		return x.IsDetailed
	}
	return false
}

type DayTimeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items        []*Event `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	DayTimestamp int64    `protobuf:"varint,2,opt,name=day_timestamp,json=dayTimestamp,proto3" json:"day_timestamp,omitempty"`
	ChatsCount   int64    `protobuf:"varint,3,opt,name=chats_count,json=chatsCount,proto3" json:"chats_count,omitempty"`
	CallsCount   int64    `protobuf:"varint,4,opt,name=calls_count,json=callsCount,proto3" json:"calls_count,omitempty"`
	EmailsCount  int64    `protobuf:"varint,5,opt,name=emails_count,json=emailsCount,proto3" json:"emails_count,omitempty"`
}

func (x *DayTimeline) Reset() {
	*x = DayTimeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_timeline_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DayTimeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayTimeline) ProtoMessage() {}

func (x *DayTimeline) ProtoReflect() protoreflect.Message {
	mi := &file_case_timeline_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayTimeline.ProtoReflect.Descriptor instead.
func (*DayTimeline) Descriptor() ([]byte, []int) {
	return file_case_timeline_proto_rawDescGZIP(), []int{7}
}

func (x *DayTimeline) GetItems() []*Event {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DayTimeline) GetDayTimestamp() int64 {
	if x != nil {
		return x.DayTimestamp
	}
	return 0
}

func (x *DayTimeline) GetChatsCount() int64 {
	if x != nil {
		return x.ChatsCount
	}
	return 0
}

func (x *DayTimeline) GetCallsCount() int64 {
	if x != nil {
		return x.CallsCount
	}
	return 0
}

func (x *DayTimeline) GetEmailsCount() int64 {
	if x != nil {
		return x.EmailsCount
	}
	return 0
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      CaseTimelineEventType `protobuf:"varint,1,opt,name=type,proto3,enum=webitel.cases.CaseTimelineEventType" json:"type,omitempty"`
	CreatedAt int64                 `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Types that are assignable to Event:
	//
	//	*Event_Chat
	//	*Event_Call
	//	*Event_Email
	Event isEvent_Event `protobuf_oneof:"event"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_timeline_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_case_timeline_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_case_timeline_proto_rawDescGZIP(), []int{8}
}

func (x *Event) GetType() CaseTimelineEventType {
	if x != nil {
		return x.Type
	}
	return CaseTimelineEventType_chat
}

func (x *Event) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (m *Event) GetEvent() isEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *Event) GetChat() *ChatEvent {
	if x, ok := x.GetEvent().(*Event_Chat); ok {
		return x.Chat
	}
	return nil
}

func (x *Event) GetCall() *CallEvent {
	if x, ok := x.GetEvent().(*Event_Call); ok {
		return x.Call
	}
	return nil
}

func (x *Event) GetEmail() *EmailEvent {
	if x, ok := x.GetEvent().(*Event_Email); ok {
		return x.Email
	}
	return nil
}

type isEvent_Event interface {
	isEvent_Event()
}

type Event_Chat struct {
	Chat *ChatEvent `protobuf:"bytes,3,opt,name=chat,proto3,oneof"`
}

type Event_Call struct {
	Call *CallEvent `protobuf:"bytes,4,opt,name=call,proto3,oneof"`
}

type Event_Email struct {
	Email *EmailEvent `protobuf:"bytes,5,opt,name=email,proto3,oneof"`
}

func (*Event_Chat) isEvent_Event() {}

func (*Event_Call) isEvent_Event() {}

func (*Event_Email) isEvent_Event() {}

type Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Mime string `protobuf:"bytes,3,opt,name=mime,proto3" json:"mime,omitempty"`
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Size int64  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_timeline_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_case_timeline_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_case_timeline_proto_rawDescGZIP(), []int{9}
}

func (x *Attachment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Attachment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Attachment) GetMime() string {
	if x != nil {
		return x.Mime
	}
	return ""
}

func (x *Attachment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attachment) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CallFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Size     int64  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	MimeType string `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	StartAt  int64  `protobuf:"varint,5,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	StopAt   int64  `protobuf:"varint,6,opt,name=stop_at,json=stopAt,proto3" json:"stop_at,omitempty"`
}

func (x *CallFile) Reset() {
	*x = CallFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_timeline_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallFile) ProtoMessage() {}

func (x *CallFile) ProtoReflect() protoreflect.Message {
	mi := &file_case_timeline_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallFile.ProtoReflect.Descriptor instead.
func (*CallFile) Descriptor() ([]byte, []int) {
	return file_case_timeline_proto_rawDescGZIP(), []int{10}
}

func (x *CallFile) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CallFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CallFile) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CallFile) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *CallFile) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *CallFile) GetStopAt() int64 {
	if x != nil {
		return x.StopAt
	}
	return 0
}

type TranscriptLookup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64           `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Locale string          `protobuf:"bytes,2,opt,name=locale,proto3" json:"locale,omitempty"`
	File   *general.Lookup `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *TranscriptLookup) Reset() {
	*x = TranscriptLookup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_case_timeline_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranscriptLookup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptLookup) ProtoMessage() {}

func (x *TranscriptLookup) ProtoReflect() protoreflect.Message {
	mi := &file_case_timeline_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptLookup.ProtoReflect.Descriptor instead.
func (*TranscriptLookup) Descriptor() ([]byte, []int) {
	return file_case_timeline_proto_rawDescGZIP(), []int{11}
}

func (x *TranscriptLookup) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TranscriptLookup) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *TranscriptLookup) GetFile() *general.Lookup {
	if x != nil {
		return x.File
	}
	return nil
}

var File_case_timeline_proto protoreflect.FileDescriptor

var file_case_timeline_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63,
	0x61, 0x73, 0x65, 0x73, 0x1a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x02, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73,
	0x65, 0x73, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x6d,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61,
	0x73, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x79, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x22, 0x34, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x73,
	0x65, 0x49, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74,
	0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x68, 0x61, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6c,
	0x6c, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x61, 0x6c, 0x6c, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x83, 0x04,
	0x0a, 0x09, 0x43, 0x61, 0x6c, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x49, 0x6e, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x64,
	0x12, 0x33, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x12, 0x30, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x77, 0x65, 0x62, 0x69,
	0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52,
	0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xf2, 0x02, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x49, 0x6e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x4d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x0c, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x30,
	0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x0a, 0x66, 0x6c, 0x6f, 0x77, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x22, 0xf9, 0x02, 0x0a, 0x0a, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x63, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x02, 0x63, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x49, 0x6e, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x74, 0x6d, 0x6c, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x4c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73,
	0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x22, 0xc3, 0x01, 0x0a, 0x0b, 0x44, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61,
	0x73, 0x65, 0x73, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x73, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x6c,
	0x6c, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xfc, 0x01, 0x0a, 0x05, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73,
	0x65, 0x73, 0x2e, 0x43, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2e, 0x0a,
	0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x65,
	0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x2e, 0x0a,
	0x04, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x65,
	0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x6c,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x31, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77,
	0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x6a, 0x0a, 0x0a, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69,
	0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x6f, 0x70, 0x41, 0x74, 0x22, 0x5f, 0x0a, 0x10, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x2a, 0x36, 0x0a, 0x15,
	0x43, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x63, 0x61, 0x6c, 0x6c, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x10, 0x02, 0x32, 0xb1, 0x02, 0x0a, 0x0c, 0x43, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x7b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x21, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63,
	0x61, 0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65,
	0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x90, 0xb5, 0x18,
	0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2f,
	0x7b, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x98, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x77, 0x65, 0x62, 0x69,
	0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61,
	0x73, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d,
	0x90, 0xb5, 0x18, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x63, 0x61, 0x73,
	0x65, 0x73, 0x2f, 0x7b, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x1a, 0x09, 0x8a,
	0xb5, 0x18, 0x05, 0x63, 0x61, 0x73, 0x65, 0x73, 0x42, 0xa5, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d,
	0x2e, 0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x63, 0x61, 0x73, 0x65, 0x73, 0x42, 0x11,
	0x43, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x77, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x63, 0x61, 0x73, 0x65, 0x73, 0x3b, 0x63, 0x61, 0x73, 0x65, 0x73, 0xa2, 0x02, 0x03,
	0x57, 0x43, 0x58, 0xaa, 0x02, 0x0d, 0x57, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x2e, 0x43, 0x61,
	0x73, 0x65, 0x73, 0xca, 0x02, 0x0d, 0x57, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x5c, 0x43, 0x61,
	0x73, 0x65, 0x73, 0xe2, 0x02, 0x19, 0x57, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x5c, 0x43, 0x61,
	0x73, 0x65, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0e, 0x57, 0x65, 0x62, 0x69, 0x74, 0x65, 0x6c, 0x3a, 0x3a, 0x43, 0x61, 0x73, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_case_timeline_proto_rawDescOnce sync.Once
	file_case_timeline_proto_rawDescData = file_case_timeline_proto_rawDesc
)

func file_case_timeline_proto_rawDescGZIP() []byte {
	file_case_timeline_proto_rawDescOnce.Do(func() {
		file_case_timeline_proto_rawDescData = protoimpl.X.CompressGZIP(file_case_timeline_proto_rawDescData)
	})
	return file_case_timeline_proto_rawDescData
}

var file_case_timeline_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_case_timeline_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_case_timeline_proto_goTypes = []interface{}{
	(CaseTimelineEventType)(0),         // 0: webitel.cases.CaseTimelineEventType
	(*GetTimelineRequest)(nil),         // 1: webitel.cases.GetTimelineRequest
	(*GetTimelineResponse)(nil),        // 2: webitel.cases.GetTimelineResponse
	(*GetTimelineCounterRequest)(nil),  // 3: webitel.cases.GetTimelineCounterRequest
	(*GetTimelineCounterResponse)(nil), // 4: webitel.cases.GetTimelineCounterResponse
	(*CallEvent)(nil),                  // 5: webitel.cases.CallEvent
	(*ChatEvent)(nil),                  // 6: webitel.cases.ChatEvent
	(*EmailEvent)(nil),                 // 7: webitel.cases.EmailEvent
	(*DayTimeline)(nil),                // 8: webitel.cases.DayTimeline
	(*Event)(nil),                      // 9: webitel.cases.Event
	(*Attachment)(nil),                 // 10: webitel.cases.Attachment
	(*CallFile)(nil),                   // 11: webitel.cases.CallFile
	(*TranscriptLookup)(nil),           // 12: webitel.cases.TranscriptLookup
	(*general.Lookup)(nil),             // 13: general.Lookup
	(*general.ExtendedLookup)(nil),     // 14: general.ExtendedLookup
}
var file_case_timeline_proto_depIdxs = []int32{
	0,  // 0: webitel.cases.GetTimelineRequest.type:type_name -> webitel.cases.CaseTimelineEventType
	8,  // 1: webitel.cases.GetTimelineResponse.days:type_name -> webitel.cases.DayTimeline
	13, // 2: webitel.cases.CallEvent.participants:type_name -> general.Lookup
	13, // 3: webitel.cases.CallEvent.gateway:type_name -> general.Lookup
	13, // 4: webitel.cases.CallEvent.flow_scheme:type_name -> general.Lookup
	13, // 5: webitel.cases.CallEvent.queue:type_name -> general.Lookup
	11, // 6: webitel.cases.CallEvent.files:type_name -> webitel.cases.CallFile
	12, // 7: webitel.cases.CallEvent.transcripts:type_name -> webitel.cases.TranscriptLookup
	13, // 8: webitel.cases.ChatEvent.participants:type_name -> general.Lookup
	14, // 9: webitel.cases.ChatEvent.gateway:type_name -> general.ExtendedLookup
	13, // 10: webitel.cases.ChatEvent.flow_scheme:type_name -> general.Lookup
	13, // 11: webitel.cases.ChatEvent.queue:type_name -> general.Lookup
	13, // 12: webitel.cases.EmailEvent.owner:type_name -> general.Lookup
	10, // 13: webitel.cases.EmailEvent.attachments:type_name -> webitel.cases.Attachment
	13, // 14: webitel.cases.EmailEvent.profile:type_name -> general.Lookup
	9,  // 15: webitel.cases.DayTimeline.items:type_name -> webitel.cases.Event
	0,  // 16: webitel.cases.Event.type:type_name -> webitel.cases.CaseTimelineEventType
	6,  // 17: webitel.cases.Event.chat:type_name -> webitel.cases.ChatEvent
	5,  // 18: webitel.cases.Event.call:type_name -> webitel.cases.CallEvent
	7,  // 19: webitel.cases.Event.email:type_name -> webitel.cases.EmailEvent
	13, // 20: webitel.cases.TranscriptLookup.file:type_name -> general.Lookup
	1,  // 21: webitel.cases.CaseTimeline.GetTimeline:input_type -> webitel.cases.GetTimelineRequest
	3,  // 22: webitel.cases.CaseTimeline.GetTimelineCounter:input_type -> webitel.cases.GetTimelineCounterRequest
	2,  // 23: webitel.cases.CaseTimeline.GetTimeline:output_type -> webitel.cases.GetTimelineResponse
	4,  // 24: webitel.cases.CaseTimeline.GetTimelineCounter:output_type -> webitel.cases.GetTimelineCounterResponse
	23, // [23:25] is the sub-list for method output_type
	21, // [21:23] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_case_timeline_proto_init() }
func file_case_timeline_proto_init() {
	if File_case_timeline_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_case_timeline_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimelineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_timeline_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimelineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_timeline_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimelineCounterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_timeline_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTimelineCounterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_timeline_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_timeline_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_timeline_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_timeline_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DayTimeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_timeline_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_timeline_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_timeline_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_case_timeline_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TranscriptLookup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_case_timeline_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*Event_Chat)(nil),
		(*Event_Call)(nil),
		(*Event_Email)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_case_timeline_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_case_timeline_proto_goTypes,
		DependencyIndexes: file_case_timeline_proto_depIdxs,
		EnumInfos:         file_case_timeline_proto_enumTypes,
		MessageInfos:      file_case_timeline_proto_msgTypes,
	}.Build()
	File_case_timeline_proto = out.File
	file_case_timeline_proto_rawDesc = nil
	file_case_timeline_proto_goTypes = nil
	file_case_timeline_proto_depIdxs = nil
}
